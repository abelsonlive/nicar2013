x <- 4
type(x)
x.is_numeric
x.is_numeric()
is_numeric(x)
is.numeric(x)
x <- c(4, "a", TRUE)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
b = x[[1]]
b + 2
x <- 1:4
y <- 2:3
x + y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x < 6] <- 0
x
x <- 4L
4L
4L + 10
is.numeric(x)
is.integer(10)
is.integer(x)
x <- c(4, "a", TRUE)
x <- 1:4
y <- 2:3
x + y
x <- list(2, "a", "b", TRUE)
x[[1]]
a = x[[1]]
is.character(a)
is.vector(a)
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
class(x[[1]])
c(1,3)
getmonitor()
}
getmonitor(1, 'asd')
getmonitor(1, 'asd')
return 'asdasd'
return
print "asdasd"
print "asdasd";
print asdasd
print 1
print "asds"
print a
"adas"
"adasd"
return summarize(data)
summarize(data)
summary(data)
data
data <- read.csv("/Users/cdavis/Desktop/classes/CDA/assignment1/specdata/317.csv")
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv")
summary(data)
data
data
data
#return
data
return
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=',')
data <- read.table("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=',')
summary(data)
#return
print summary(data)
#return
return
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=',')
summary(data)
summary(data)
return
if summarize == TRUE {
summarize(data)
summary(data)
return
#return
}
getmonitor(1, 'asd')
getmonitor(1, 'asd')
return
}
getmonitor(1, 'asd')
getmonitor(1, 'asd')
getmonitor(1, 'asd')
getmonitor(1, 'asd')
getmonitor(1, 'asd')
getmonitor(1, 'asd')
##summary(data)
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",")
summary(data)
return
}
getmonitor(1, 'asd')
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
summary(data);
return
}
getmonitor(1, 'asd')
}
}
return;
}
}
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
summary(data);
return;
}
}
getmonitor(1, "asdas")
}
getmonitor(1, "asdas")
summary(data);
}
return;
}
}
}
}
}
}
}
getmonitor(1, "asdas")
getmonitor(1, "asdas")
}
return(summarize)
}
return(sumdata)
}
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
getmonitor(1, "asdas")
return(sumdata)
print getmonitor(1, "asdas")
print getmonitor(1, "asdas")
print getmonitor(1, "asdas")
return(summary(data))
}
getmonitor(1, "asdas")
data
return(summary(data))
}
getmonitor(1, "asdas")
return(data)
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
return(summary(data))
}
getmonitor(1, "asdas")
getmonitor(1, "asdas")
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",")
data
summary(data)
sumdata <- summary(data)
sumdata
return(sumdata)
}
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
print unexpected '}' in "}"
sd
sd
sd
sd
sd
sd <- getmonitor(1, "asdas")
sd <- getmonitor(1, "asdas")
sd <- getmonitor(1, "asdas")
sd <- getmonitor(1, "asdas")
}
return(sumdata)
}
sd <- getmonitor(1, "asdas")
sumdata <- data
sd
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",")
sd
asdf <- getmonitor(1, "asdas")
asdf <- getmonitor(1, "asdas")
}
sumdata <- data
asdf
asdf <- getmonitor(1, "asdas")
return(qwert)
getmonitor <- function(id, directory, summarize = FALSE) {
asd
asd
)
return(qwert)
}
}
asdf <- getmonitor(1, "asdas")
asdf <- getmonitor(1, "asdas")
asdf <- getmonitor(1, "asdas")
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
asdf
getmonitor(1, "asdas")
getmonitor <- function(id, directory, summarize = FALSE) {
data <- read.csv("/Users/cjdd3b/Desktop/classes/CDA/assignment1/specdata/317.csv", header=TRUE, sep=",");
qwert <- data
if(summarize == TRUE) {
qwert <- summary(data)
}
return(qwert)
}
getmonitor(1, "asdas")
data <- getmonitor(1, "specdata")
head(data)
data <- getmonitor(101, "specdata", TRUE)
data
head(data)
summary(googledata)
summary(googledata)
googledata
googledata = read.csv("/Users/cjdd3b/Desktop/report.csv")
googledata
qplot(as, asd, data = googledata, color = data.science)
library(ggplot2)
googledata = read.csv("/Users/cjdd3b/Desktop/report.csv")
qplot(as, asd, data = googledata, color = data.science)
qplot(googledata.Week, googledata.data.science, data = googledata, color = data.science)
qplot(googledata$Week, googledata.data.science, data = googledata, color = data.science)
qplot(googledata$Week, googledata$data.science, data = googledata, color = data.science)
qplot(googledata$Week, googledata$data.journalism, data = googledata, color = data.science)
qplot(googledata$Week, googledata$count, data = googledata, color = googledata$type)
View(googledata)
qplot(googledata$Week, googledata$count, data = googledata, color = googledata$type)
googledata = read.csv("/Users/cjdd3b/Desktop/report.csv")
qplot(googledata$Week, googledata$count, data = googledata, color = googledata$type)
View(googledata)
qplot(googledata$week, googledata$count, data = googledata, color = googledata$type)
qplot(googledata$week, googledata$count, data=googledata, geom="line", color=googledata$type)
qplot(googledata$week, googledata$count, data=googledata, geom="line", color=googledata$type)
qplot(googledata$week, googledata$count, data=googledata, geom="line")
qplot(googledata$week, googledata$count, data=googledata, color=googledata$type)
qplot(week, count, data=googledata, color=googledata$type)
qplot(week, count, data=googledata, geom="line", color=googledata$type)
qplot(week, count, data=googledata, geom="line", color=type)
qplot(count, week, data=googledata, geom="line", color=type)
week
qplot(week, count, data=googledata, geom="line", color=type)
googledata = read.csv("/Users/cjdd3b/Desktop/report.csv")
qplot(week, count, data=googledata, geom="line", color=type)
qplot(week, count, data=googledata, color=googledata$type)
p <- ggplot(googledata, aes(x=week, y=count, group=type))
p
p.geom_line()
p + geom_line()
p.geom_line(aes(color=type))
p + geom_line(aes(color=type))
p + geom_line(aes(color=type)) + opts(title="Test")
p + geom_line(aes(color=type)) + opts(title="Google Trends: data journalism vs. data science")
ls
cd
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
data <- read.csv("ucr_ky.csv")
getwd()
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
summary(data);
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
source('~/Desktop/nicar2013/exploratory-data-analysis/ucr_ky.R')
#setwd("/Users/cjdd3b/Desktop/nicar2013/exploratory-data-analysis/")
summary(data)
qplot(data)
library(ggplot2)
qplot(data=data)
qplot(data=data, x=ROBGUN3)
qplot(data=data, x=ROBGUN3, geom="boxplot")
qplot(data=data, x=ROBGUN3, y=ROBGUN3, geom="boxplot")
qplot(data=data, x=CENPOP1, y=CENPOP1, geom="boxplot")
qplot(data=data, x=CENPOP1, y=var1, geom="boxplot")
qplot(data=data, x=AGENCY, y=ROBGUN3, geom="boxplot")
qplot(data=data, x=AGENCY, y=ROBGUN3)
qplot(data=data, x=AGENCY, y=ROBGUN3, color=AGENCY)
#qplot(data=data, x=AGENCY, y=ROBGUN3, color=AGENCY)
#qplot(data=data, x=AGENCY, y=ROBGUN3, color=AGENCY)
summary(data)
data$assault.norm <- data$ASLTT1 / dat$CENPOP1
data$assault.norm <- data$ASLTT1 / data$CENPOP1
data$assault.norm <- data$ASLTT1 / data$CENPOP1
qplot(data=data, x=AGENCY, y=data$assault.norm)
qplot(data=data, x=AGENCY, y=data$assault.norm, geom="barchart")
qplot(data=data, x=AGENCY, y=data$assault.norm, geom="bar")
str(data)
qplot(data=data, x=ADDRS1, y=data$assault.norm, geom="bar")
qplot(data=data, x=ADDRS1, y=data$assault.norm)
qplot(data=data, x=data$assault.norm, y=data$assault.norm, geom="boxplot") + facet_grid(ADDRS1)
qplot(data=data, x=data$assault.norm, y=data$assault.norm, geom="boxplot") + facet_grid(data$ADDRS1)
qplot(data=data, x=data$assault.norm) + facet_grid(data$ADDRS1)
qplot(data=data, x=data$assault.norm) + facet_grid(ADDRS1)
qplot(data=data, x=data$assault.norm) + facet_grid(.~data$ADDRS1)
qplot(data=data, x=data$assault.norm) + facet_grid(data$ADDRS1 . ~)
qplot(data=data, x=data$assault.norm) + facet_grid(data$ADDRS1 ~ .)
qplot(data=data, x=ADDRS1, y=data$assault.norm) + facet_grid(data$ADDRS1 ~ .)
qplot(data=data, x=ADDRS1, y=data$assault.norm) + facet_grid(data$ADDRS1)
qplot(data=data, x=ADDRS1, y=data$assault.norm, geom="boxplot")
tapply(y=data$assault.norm, data$ADDRS1, mean)
tapply(data$assault.norm, data$ADDRS1, mean)
tapply(data$assault.norm, data$AGENCY, mean)
str(dat)
str(data)
tapply(data$ASLTT1, data$AGENCY, mean)
str(data)
data$assault.norm <- data$ASLTT1 / data$CENPOP1
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot")
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot") + opts(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot") + opts(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot") + opts(axis.text.x = ORI(angle = 90, hjust = 1))
qplot(data=data, x=ORI, y=data$assault.norm, geom="boxplot") + opts(axis.text.x = theme_text(angle = 90, hjust = 1))
data.allyears$yearfactor <- as.factor(data.allyears$year)
library(ggplot2, plyr, reshape, Hmisc)
install.packages("ggplot2", "plyr", "reshape", "Hmisc")
WORKING_DIR <<- "/Users/cjdd3b/Desktop/nicar2013/exploratory-data-analysis/"
install.packages("ggplot2", "plyr", "reshape", "Hmisc")
library(ggplot2, plyr, reshape)
install.packages("ggplot2", "plyr", "reshape", "Hmisc")
library(ggplot2, plyr, reshape)
install.packages("ggplot2", "plyr", "reshape", "Hmisc")
WORKING_DIR <<- "/Users/cjdd3b/Desktop/nicar2013/exploratory-data-analysis/"
library(ggplot2)
setwd(WORKING_DIR)
data <- read.csv("data/campus_data_2011.csv") # And now load the data
str(data)
data.2011$violent <- rowSums(data.2011[, c(3:8)])
data.2011$property <- rowSums(data.2011[, c(9:11)])
data.2011$total <- rowSums(data.2011[, c(12:13)])
data$violent <- rowSums(data[, c(3:8)])
data$property <- rowSums(data[, c(9:11)])
data$total <- rowSums(data[, c(12:13)])
head(data)
head(data[order(data$total, decreasing=T),], 10)
head(data[order(data$total / data$total_enr, decreasing=T),], 10)
reshaped <- melt(data)
library(reshape)
reshaped <- melt(data)
qplot(value, data=subset(reshaped, value > 0), binwidth=5) + facet_grid(. ~ variable)
boxplot <- ggplot(reshaped, aes(variable, value)) + geom_boxplot()
boxplot + scale_y_log10()
qplot(value, reshaped)
str(reshaped)
qplot(reshaped)
qplot(reshaped$value, reshaped)
qplot(reshaped$value, data=reshaped)
qplot(reshaped$value, data=reshaped, binwidth=5) + facet_grid(. ~ reshaped$variable)
qplot(reshaped$value, data=reshaped, binwidth=5) + facet_grid(. ~ variable)
p1 <- ggplot(reshaped, aes(y=value, x=variable, group=variable)) + geom_bar()
p1
p1 <- ggplot(reshaped, aes(y=value, group=variable)) + geom_bar()
p1
ggplot(reshaped, aes(y=value, x=variable, group=variable)) + geom_bar()
ggplot(reshaped, aes(y=value, x=variable)) + geom_bar()
ggplot(reshaped, aes(y=value, x=variable, group=variable)) + geom_bar()
head(reshaped)
reshaped <- melt(data, id="instid")
reshaped <- melt(data, id="instname")
ggplot(reshaped, aes(y=value, x=variable, group=variable)) + geom_bar()
ggplot(reshaped[2:3], aes(y=value, x=variable, group=variable)) + geom_bar()
ggplot(reshaped, aes(y=value, x=value, group=variable)) + geom_bar()
ggplot(reshaped, aes(y=value, x=value)) + geom_bar()
ggplot(reshaped, aes(y=value, x=value)) + geom_bar() + facet_wrap(~ variable)
ggplot(reshaped, aes(x=value)) + geom_bar()
ggplot(reshaped, aes(x=value)) + geom_bar() + facet_wrap(~ variable)
ggplot(subset(reshaped, value > 0), aes(x=value)) + geom_bar() + facet_wrap(~ variable)ggplot(subset(reshaped, value > 0), aes(x=value), binwidth=5) + geom_bar() + facet_wrap(~ variable)
ggplot(subset(reshaped, value > 0), aes(x=value)) + geom_bar(binwidth=5) + facet_wrap(~ variable)
p1 <- ggplot(reshaped, aes(x=value)) + geom_bar(binwidth=50) + facet_wrap(~ variable)
p1
str(data)
data[1, c(3:)]
data[1, c(3:13)]
data[1, c(1, 3:13)]
reshaped <- melt(data[, c(1, 3:13)], id="instname")
ggplot(reshaped, aes(x=value)) + geom_bar(binwidth=5) + facet_wrap(~ variable)
boxplot <- ggplot(reshaped.crimes, aes(variable, value)) + geom_boxplot()
reshaped.crimes <- melt(data[, c(1, 3:13)], id="instname")
boxplot <- ggplot(reshaped.crimes, aes(variable, value)) + geom_boxplot()
boxplot + scale_y_log10()
head(data[order(data$forcible, decreasing=T),], 10)
pairs(data)
data[2:]
data[2:20]
data[2:15]
data[2:13]
pairs(data[2:13])
data.numerics <- data[2:13]
cormatrix <- cor(data.numerics)
cormatrix
m <- melt(cormatrix)
ggplot(m, aes(X1, X2, fill = value)) + geom_tile() + scale_fill_gradient(low = "blue",  high = "yellow")
data.pca <- princomp(data, scores=TRUE)
data.numerics <- sapply(data, is.numeric)
pairs(data.numerics)
data.numerics
data.numerics <- data[, sapply(data, is.numeric)]
data.numerics
pairs(data.numerics)
data.pca <- princomp(data.numerics, scores=TRUE)
plot(data.pca)
biplot(data.pca)
data
data.normalized <- scale(data[3:15], center=FALSE, scale=colSums(data[3:15]))
str(data)
data.normalized <- scale(data.numerics, center=FALSE, scale=colSums(data.numerics))
data.pca <- princomp(data.numerics, scores=TRUE)
biplot(data.pca)
PCbiplot(data.pca)
PCbiplot <- function(PC, x="PC1", y="PC2") {
# PC being a prcomp object
data <- data.frame(obsnames=row.names(PC$x), PC$x)
plot <- ggplot(data, aes_string(x=x, y=y)) + geom_text(alpha=.4, size=3, aes(label=obsnames))
plot <- plot + geom_hline(aes(0), size=.2) + geom_vline(aes(0), size=.2)
datapc <- data.frame(varnames=rownames(PC$rotation), PC$rotation)
mult <- min(
(max(data[,y]) - min(data[,y])/(max(datapc[,y])-min(datapc[,y]))),
(max(data[,x]) - min(data[,x])/(max(datapc[,x])-min(datapc[,x])))
)
datapc <- transform(datapc,
v1 = .7 * mult * (get(x)),
v2 = .7 * mult * (get(y))
)
plot <- plot + coord_equal() + geom_text(data=datapc, aes(x=v1, y=v2, label=varnames), size = 5, vjust=1, color="red")
plot <- plot + geom_segment(data=datapc, aes(x=0, y=0, xend=v1, yend=v2), arrow=arrow(length=unit(0.2,"cm")), alpha=0.75, color="red")
plot
}
PCbiplot(data.pca)
fit <- prcomp(data, scale=T)
fit <- prcomp(data.numerics, scale=T)
PCbiplot(fit)
data[1]
data['instname']
rownames(data, data['instname'])
data.pca <- princomp(data.numerics, scores=TRUE)
biplot(data.pca)
d <- dist(data.normalized)
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS", type="n")
text(x, y, labels = row.names(data.normalized), cex=.7)
data.normalized
d <- dist(data.normalized)
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS", type="n")
text(x, y, labels = row.names(data), cex=.7)
row.names(data)
d <- dist(data)
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS", type="n")
text(x, y, labels = row.names(data), cex=.7)
d <- dist(data.numerics)
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS", type="n")
text(x, y, labels = row.names(data), cex=.7)
d <- dist(data.numerics[2:13])
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", main="Metric MDS", type="n")
text(x, y, labels = row.names(data), cex=.7)
data.numerics[117]
data.numerics
data
d <- dist(data.normalized[2:13])
fit <- cmdscale(d, eig=TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, type="n")
text(x, y, labels = row.names(data), cex=.7)
rownames(data.numerics, data[1])
rownames(data.numerics, data[2])
rownames(data.numerics, data[1])
data[1]
row.names(data.numeric)
row.names(data.numerics)
rownames(data.numerics) <- rownames(data.numerics, data[1])
row.names(data.numerics)
